server.port=8080

spring.application.name=api-gateway

# Eureka Config
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

jwt.secret=3bbfaa0ee267ffb1514c1dd6a00f5c3dc61891e6758c7aa833cacaffcc163fb3 

# CORS settings (allow frontend)
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:4200
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*

# ROUTES CONFIG (example routing - services must be running)
spring.cloud.gateway.routes[0].id=registration-service
spring.cloud.gateway.routes[0].uri=lb://REGISTRATION-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/registration/**

spring.cloud.gateway.routes[1].id=login-service
spring.cloud.gateway.routes[1].uri=lb://LOGIN-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/login/**

spring.cloud.gateway.routes[2].id=book-service
spring.cloud.gateway.routes[2].uri=lb://BOOK-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/book/**

spring.cloud.gateway.routes[3].id=order-service
spring.cloud.gateway.routes[3].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/order/**

spring.cloud.gateway.routes[4].id=inventory_service
spring.cloud.gateway.routes[4].uri=lb://INVENTORY-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/inventory/**

spring.cloud.gateway.routes[5].id=payment-service
spring.cloud.gateway.routes[5].uri=lb://PAYMENT-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/payment/**
